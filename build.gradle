import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version "1.6.0"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

apply plugin: 'maven-publish'

group 'io.dereknelson.lostcities-cloud'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.0'
    compileOnly("jakarta.servlet:jakarta.servlet-api:6.0.0")
    compileOnly "org.springframework:spring-web:6.1.4"

    implementation 'org.springframework.data:spring-data-jpa:3.0.0'

    implementation 'org.springframework.data:spring-data-commons:2.5.4'

    implementation 'org.springframework.security:spring-security-config:6.1.4'
    implementation 'org.springframework.security:spring-security-web:6.1.4'

    //compileOnly "javax.servlet:servlet-api:3.0-alpha-1"
    compileOnly "org.slf4j:slf4j-api:1.7.+"
    implementation("jakarta.persistence:jakarta.persistence-api:3.1.0")

    implementation("io.jsonwebtoken:jjwt-api:0.11.2")
    implementation("io.jsonwebtoken:jjwt-impl:0.11.2")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.2")

    implementation "org.springframework.security:spring-security-core:6.1.4"


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            // Include any other artifacts here, like javadocs
        }
    }

    repositories {
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }

        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/lostcities-cloud/lostcities-common")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

tasks.withType(KotlinCompile) {
    kotlinOptions.jvmTarget = "17"
}

java {
    withSourcesJar()
}